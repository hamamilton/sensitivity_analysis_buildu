{"ast":null,"code":"var _jsxFileName = \"/Users/hamiltonmarty/sensitivity_app copy/sensitivity_application/frontend/src/components/SensitivityCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n// Import LineElement\nTooltip, Legend } from \"chart.js\";\nimport { Scatter } from \"react-chartjs-2\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\nconst SensitivityCalculator = ({\n  userEmail,\n  initialFile\n}) => {\n  _s();\n  const [file, setFile] = useState(initialFile || null);\n  const [subjectProperty, setSubjectProperty] = useState(null);\n  const [comparables, setComparables] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Debug logging\n  useEffect(() => {\n    console.log('SensitivityCalculator - Received Email:', userEmail);\n    console.log('SensitivityCalculator - Received Initial File:', initialFile);\n  }, [userEmail, initialFile]);\n\n  // Process uploaded file when initialFile changes\n  useEffect(() => {\n    const processUploadedFile = async () => {\n      if (!initialFile) return;\n      setLoading(true);\n      setError(null);\n      try {\n        // Simulate file processing for development\n        if (process.env.NODE_ENV === 'development') {\n          console.log('Simulating file processing in development mode');\n          setSubjectProperty({\n            address: '123 Test Street',\n            pre_adj: 500000,\n            post_adj: 525000\n          });\n          setComparables([{\n            address: '125 Test Street',\n            pre_adj: 480000,\n            post_adj: 495000,\n            comp_type: 'Sale',\n            total_adj_percent: 0.03,\n            property_type: 'Single Family',\n            sale_date: '2023-01-15'\n          }, {\n            address: '130 Test Avenue',\n            pre_adj: 520000,\n            post_adj: 535000,\n            comp_type: 'Sale',\n            total_adj_percent: 0.02,\n            property_type: 'Townhouse',\n            sale_date: '2023-02-20'\n          }]);\n          return;\n        }\n\n        // Actual file upload logic would go here\n        const formData = new FormData();\n        formData.append('file', initialFile);\n        const response = await axios.post('/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data) {\n          setSubjectProperty(response.data.subjectProperty);\n          setComparables(response.data.comparables);\n        }\n      } catch (err) {\n        console.error('File processing error:', err);\n        setError('Failed to process the uploaded file. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    processUploadedFile();\n  }, [initialFile]);\n  const scatterData = () => {\n    if (!comparables.length) return null;\n\n    // Filter out listing properties\n    const salesOnly = comparables.filter(comp => comp.comp_type === \"Sale\");\n\n    // Function to create a custom rotated triangle canvas\n    const createRotatedTriangle = rotation => {\n      const size = 10; // Size of the triangle\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = size * 2;\n      canvas.height = size * 2;\n      ctx.translate(size, size); // Move to the center of the canvas\n      ctx.rotate(rotation); // Rotate the triangle\n      ctx.beginPath();\n      ctx.moveTo(0, -size); // Top point\n      ctx.lineTo(size, size); // Bottom-right point\n      ctx.lineTo(-size, size); // Bottom-left point\n      ctx.closePath();\n      ctx.fillStyle = \"blue\"; // Set the fill color\n      ctx.fill();\n      return canvas;\n    };\n\n    // Predefine upward and downward triangles\n    const upwardTriangle = createRotatedTriangle(0); // No rotation\n    const downwardTriangle = createRotatedTriangle(Math.PI); // 180-degree rotation\n\n    const preAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.pre_adj,\n      address: comp.address,\n      postAdj: comp.post_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: comp.post_adj > comp.pre_adj ? upwardTriangle : downwardTriangle // Use predefined triangles\n    }));\n    const postAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.post_adj,\n      address: comp.address,\n      preAdj: comp.pre_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: \"circle\" // Post-adjustment points are always circles\n    }));\n    const subjectLine = Array.from({\n      length: salesOnly.length + 1\n    }, (_, i) => ({\n      x: i,\n      y: (subjectProperty === null || subjectProperty === void 0 ? void 0 : subjectProperty.pre_adj) || 0\n    }));\n    return {\n      datasets: [{\n        label: \"Pre-Adjustment Sale Price\",\n        data: preAdjPoints,\n        backgroundColor: \"blue\",\n        pointStyle: preAdjPoints.map(point => point.pointStyle),\n        // Apply triangle orientation\n        radius: 10 // Increase the size of the triangles\n      }, {\n        label: \"Post-Adjustment Sale Price\",\n        data: postAdjPoints,\n        backgroundColor: \"green\",\n        pointStyle: \"circle\",\n        // Post-adjustment points are always circles\n        radius: 10 // Increase the size of the circles\n      }, {\n        label: `Subject Sale Price: ${formatCurrency((subjectProperty === null || subjectProperty === void 0 ? void 0 : subjectProperty.pre_adj) || 0)}`,\n        data: subjectLine,\n        borderColor: \"red\",\n        borderWidth: 2,\n        pointRadius: 0,\n        // Hide points for the line\n        type: \"line\" // Render as a line\n      }]\n    };\n  };\n  const formatCurrency = value => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(value);\n  };\n  const formatPercent = (value, multiplyBy100 = true) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    const percentValue = multiplyBy100 ? parseFloat(value) * 100 : parseFloat(value);\n    return `${percentValue.toFixed(2)}%`; // Format to 2 decimal points\n  };\n  const scatterOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const datasetLabel = context.dataset.label;\n            const dataPoint = context.raw || {};\n\n            // Check if the dataset is the Subject Sale Price line\n            if (datasetLabel === \"Subject Sale Price\") {\n              return `Subject Property Sold Price: ${formatCurrency(dataPoint.y)}`;\n            }\n            return [`Address: ${dataPoint.address || \"N/A\"}`, `Pre-Adjustment Sale Price: ${formatCurrency(dataPoint.preAdj || dataPoint.y || 0)}`, `Post-Adjustment Sale Price: ${formatCurrency(dataPoint.postAdj || dataPoint.y || 0)}`, `Percent Change: ${formatPercent(dataPoint.percentChange || 0)}`];\n          }\n        }\n      },\n      afterDatasetsDraw: chart => {\n        const {\n          ctx,\n          data\n        } = chart;\n\n        // Draw lines between pre- and post-adjustment points\n        const preDataset = data.datasets[0].data; // Pre-Adjustment\n        const postDataset = data.datasets[1].data; // Post-Adjustment\n\n        ctx.save();\n        ctx.strokeStyle = \"gray\";\n        ctx.lineWidth = 1;\n        preDataset.forEach((prePoint, index) => {\n          const postPoint = postDataset[index];\n          if (prePoint && postPoint) {\n            const x1 = chart.scales.x.getPixelForValue(prePoint.x);\n            const y1 = chart.scales.y.getPixelForValue(prePoint.y);\n            const x2 = chart.scales.x.getPixelForValue(postPoint.x);\n            const y2 = chart.scales.y.getPixelForValue(postPoint.y);\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n          }\n        });\n        ctx.restore();\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Comparable Sales\"\n        },\n        ticks: {\n          stepSize: 1,\n          // Set step size to 1\n          min: 1 // Start the x-axis at 1 to hide step \"0\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Sale Price\"\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 10,\n        // Increase the size of the dots\n        hoverRadius: 10\n      }\n    }\n  };\n  const calculateSummaryCounts = () => {\n    const includedProperties = comparables.filter(comp => comp.comp_type !== \"Excluded\");\n    const excludedProperties = comparables.filter(comp => comp.comp_type === \"Excluded\");\n    return {\n      includedCount: includedProperties.length,\n      excludedCount: excludedProperties.length\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your file...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-center\",\n        children: \"Adjustment Sensitivity Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Summary Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-responsive\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Pre-Adjustment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Post-Adjustment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Maximum Sale Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Minimum Sale Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Range of Sale Prices\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Percent Change\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Included Properties\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      children: comparables.filter(c => c.comp_type === \"Sale\").length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Excluded Properties (Listings)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      children: comparables.filter(c => c.comp_type !== \"Sale\").length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Analysis Explanation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                rows: \"5\",\n                readOnly: true,\n                value: `A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} to the post-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary mt-3\",\n                onClick: () => {\n                  navigator.clipboard.writeText(`A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} to the post-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`);\n                  alert(\"Text copied to clipboard!\");\n                },\n                children: \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), scatterData() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-info text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Comparable Property Adjustments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(Scatter, {\n                data: scatterData(),\n                options: scatterOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 17\n          }, this), comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Comparable Properties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-responsive\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Property Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Pre-Adjustment Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Post-Adjustment Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Comparable Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Total Adjustment Percent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Sale Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: comparables.map((comp, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.property_type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(comp.pre_adj)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 641,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(comp.post_adj)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.comp_type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent(comp.total_adj_percent, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 29\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.sale_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(SensitivityCalculator, \"kZOOjLYCsN3gh+jtVKa/hc9TqD4=\");\n_c = SensitivityCalculator;\nexport default SensitivityCalculator;\nvar _c;\n$RefreshReg$(_c, \"SensitivityCalculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","Scatter","jsxDEV","_jsxDEV","register","SensitivityCalculator","userEmail","initialFile","_s","file","setFile","subjectProperty","setSubjectProperty","comparables","setComparables","error","setError","loading","setLoading","console","log","processUploadedFile","process","env","NODE_ENV","address","pre_adj","post_adj","comp_type","total_adj_percent","property_type","sale_date","formData","FormData","append","response","post","headers","data","err","scatterData","length","salesOnly","filter","comp","createRotatedTriangle","rotation","size","canvas","document","createElement","ctx","getContext","width","height","translate","rotate","beginPath","moveTo","lineTo","closePath","fillStyle","fill","upwardTriangle","downwardTriangle","Math","PI","preAdjPoints","map","index","x","y","postAdj","percentChange","pointStyle","postAdjPoints","preAdj","subjectLine","Array","from","_","i","datasets","label","backgroundColor","point","radius","formatCurrency","borderColor","borderWidth","pointRadius","type","value","Intl","NumberFormat","style","currency","format","formatPercent","multiplyBy100","percentValue","parseFloat","toFixed","scatterOptions","plugins","tooltip","callbacks","context","datasetLabel","dataset","dataPoint","raw","afterDatasetsDraw","chart","preDataset","postDataset","save","strokeStyle","lineWidth","forEach","prePoint","postPoint","x1","scales","getPixelForValue","y1","x2","y2","stroke","restore","title","display","text","ticks","stepSize","min","elements","hoverRadius","calculateSummaryCounts","includedProperties","excludedProperties","includedCount","excludedCount","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","max","c","colSpan","rows","readOnly","onClick","navigator","clipboard","writeText","alert","options","_c","$RefreshReg$"],"sources":["/Users/hamiltonmarty/sensitivity_app copy/sensitivity_application/frontend/src/components/SensitivityCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement, // Import LineElement\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Scatter } from \"react-chartjs-2\";\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend\n);\n\nconst SensitivityCalculator = ({ userEmail, initialFile }) => {\n  const [file, setFile] = useState(initialFile || null);\n  const [subjectProperty, setSubjectProperty] = useState(null);\n  const [comparables, setComparables] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Debug logging\n  useEffect(() => {\n    console.log('SensitivityCalculator - Received Email:', userEmail);\n    console.log('SensitivityCalculator - Received Initial File:', initialFile);\n  }, [userEmail, initialFile]);\n\n  // Process uploaded file when initialFile changes\n  useEffect(() => {\n    const processUploadedFile = async () => {\n      if (!initialFile) return;\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Simulate file processing for development\n        if (process.env.NODE_ENV === 'development') {\n          console.log('Simulating file processing in development mode');\n          setSubjectProperty({\n            address: '123 Test Street',\n            pre_adj: 500000,\n            post_adj: 525000\n          });\n          setComparables([\n            {\n              address: '125 Test Street',\n              pre_adj: 480000,\n              post_adj: 495000,\n              comp_type: 'Sale',\n              total_adj_percent: 0.03,\n              property_type: 'Single Family',\n              sale_date: '2023-01-15'\n            },\n            {\n              address: '130 Test Avenue',\n              pre_adj: 520000,\n              post_adj: 535000,\n              comp_type: 'Sale',\n              total_adj_percent: 0.02,\n              property_type: 'Townhouse',\n              sale_date: '2023-02-20'\n            }\n          ]);\n          return;\n        }\n\n        // Actual file upload logic would go here\n        const formData = new FormData();\n        formData.append('file', initialFile);\n\n        const response = await axios.post('/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        if (response.data) {\n          setSubjectProperty(response.data.subjectProperty);\n          setComparables(response.data.comparables);\n        }\n      } catch (err) {\n        console.error('File processing error:', err);\n        setError('Failed to process the uploaded file. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    processUploadedFile();\n  }, [initialFile]);\n\n  const scatterData = () => {\n    if (!comparables.length) return null;\n\n    // Filter out listing properties\n    const salesOnly = comparables.filter((comp) => comp.comp_type === \"Sale\");\n\n    // Function to create a custom rotated triangle canvas\n    const createRotatedTriangle = (rotation) => {\n      const size = 10; // Size of the triangle\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = size * 2;\n      canvas.height = size * 2;\n      ctx.translate(size, size); // Move to the center of the canvas\n      ctx.rotate(rotation); // Rotate the triangle\n      ctx.beginPath();\n      ctx.moveTo(0, -size); // Top point\n      ctx.lineTo(size, size); // Bottom-right point\n      ctx.lineTo(-size, size); // Bottom-left point\n      ctx.closePath();\n      ctx.fillStyle = \"blue\"; // Set the fill color\n      ctx.fill();\n      return canvas;\n    };\n\n    // Predefine upward and downward triangles\n    const upwardTriangle = createRotatedTriangle(0); // No rotation\n    const downwardTriangle = createRotatedTriangle(Math.PI); // 180-degree rotation\n\n    const preAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.pre_adj,\n      address: comp.address,\n      postAdj: comp.post_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle:\n        comp.post_adj > comp.pre_adj ? upwardTriangle : downwardTriangle, // Use predefined triangles\n    }));\n\n    const postAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.post_adj,\n      address: comp.address,\n      preAdj: comp.pre_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: \"circle\", // Post-adjustment points are always circles\n    }));\n\n    const subjectLine = Array.from(\n      { length: salesOnly.length + 1 },\n      (_, i) => ({\n        x: i,\n        y: subjectProperty?.pre_adj || 0,\n      })\n    );\n\n    return {\n      datasets: [\n        {\n          label: \"Pre-Adjustment Sale Price\",\n          data: preAdjPoints,\n          backgroundColor: \"blue\",\n          pointStyle: preAdjPoints.map((point) => point.pointStyle), // Apply triangle orientation\n          radius: 10, // Increase the size of the triangles\n        },\n        {\n          label: \"Post-Adjustment Sale Price\",\n          data: postAdjPoints,\n          backgroundColor: \"green\",\n          pointStyle: \"circle\", // Post-adjustment points are always circles\n          radius: 10, // Increase the size of the circles\n        },\n        {\n          label: `Subject Sale Price: ${formatCurrency(\n            subjectProperty?.pre_adj || 0\n          )}`,\n          data: subjectLine,\n          borderColor: \"red\",\n          borderWidth: 2,\n          pointRadius: 0, // Hide points for the line\n          type: \"line\", // Render as a line\n        },\n      ],\n    };\n  };\n\n  const formatCurrency = (value) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(value);\n  };\n\n  const formatPercent = (value, multiplyBy100 = true) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    const percentValue = multiplyBy100\n      ? parseFloat(value) * 100\n      : parseFloat(value);\n    return `${percentValue.toFixed(2)}%`; // Format to 2 decimal points\n  };\n\n  const scatterOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const datasetLabel = context.dataset.label;\n            const dataPoint = context.raw || {};\n\n            // Check if the dataset is the Subject Sale Price line\n            if (datasetLabel === \"Subject Sale Price\") {\n              return `Subject Property Sold Price: ${formatCurrency(\n                dataPoint.y\n              )}`;\n            }\n\n            return [\n              `Address: ${dataPoint.address || \"N/A\"}`,\n              `Pre-Adjustment Sale Price: ${formatCurrency(\n                dataPoint.preAdj || dataPoint.y || 0\n              )}`,\n              `Post-Adjustment Sale Price: ${formatCurrency(\n                dataPoint.postAdj || dataPoint.y || 0\n              )}`,\n              `Percent Change: ${formatPercent(dataPoint.percentChange || 0)}`,\n            ];\n          },\n        },\n      },\n      afterDatasetsDraw: (chart) => {\n        const { ctx, data } = chart;\n\n        // Draw lines between pre- and post-adjustment points\n        const preDataset = data.datasets[0].data; // Pre-Adjustment\n        const postDataset = data.datasets[1].data; // Post-Adjustment\n\n        ctx.save();\n        ctx.strokeStyle = \"gray\";\n        ctx.lineWidth = 1;\n\n        preDataset.forEach((prePoint, index) => {\n          const postPoint = postDataset[index];\n          if (prePoint && postPoint) {\n            const x1 = chart.scales.x.getPixelForValue(prePoint.x);\n            const y1 = chart.scales.y.getPixelForValue(prePoint.y);\n            const x2 = chart.scales.x.getPixelForValue(postPoint.x);\n            const y2 = chart.scales.y.getPixelForValue(postPoint.y);\n\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n          }\n        });\n\n        ctx.restore();\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Comparable Sales\",\n        },\n        ticks: {\n          stepSize: 1, // Set step size to 1\n          min: 1, // Start the x-axis at 1 to hide step \"0\"\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Sale Price\",\n        },\n      },\n    },\n    elements: {\n      point: {\n        radius: 10, // Increase the size of the dots\n        hoverRadius: 10,\n      },\n    },\n  };\n\n  const calculateSummaryCounts = () => {\n    const includedProperties = comparables.filter(\n      (comp) => comp.comp_type !== \"Excluded\"\n    );\n    const excludedProperties = comparables.filter(\n      (comp) => comp.comp_type === \"Excluded\"\n    );\n\n    return {\n      includedCount: includedProperties.length,\n      excludedCount: excludedProperties.length,\n    };\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      {loading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <p>Processing your file...</p>\n        </div>\n      ) : error ? (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      ) : (\n        <div className=\"container-fluid mt-5\">\n          <h1 className=\"mb-4 text-center\">Adjustment Sensitivity Analysis</h1>\n          <div className=\"row\">\n            {/* Right Column: Results and Charts */}\n            <div className=\"col-md-8\">\n              {/* Results Summary Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Summary Results</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <table className=\"table table-bordered table-responsive\">\n                      <thead>\n                        <tr>\n                          <th></th>\n                          <th>Pre-Adjustment</th>\n                          <th>Post-Adjustment</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>Maximum Sale Price</td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Minimum Sale Price</td>\n                          <td>\n                            {formatCurrency(\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Range of Sale Prices</td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Percent Change</td>\n                          <td>\n                            {formatPercent(\n                              (Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )) /\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )\n                            )}\n                          </td>\n                          <td>\n                            {formatPercent(\n                              (Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )) /\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Included Properties</td>\n                          <td colSpan=\"2\">\n                            {comparables.filter((c) => c.comp_type === \"Sale\").length}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Excluded Properties (Listings)</td>\n                          <td colSpan=\"2\">\n                            {comparables.filter((c) => c.comp_type !== \"Sale\").length}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n\n              {/* Analysis Explanation Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Analysis Explanation</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"5\"\n                      readOnly\n                      value={`A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(\n                        Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.pre_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )\n                      )} or ${formatPercent(\n                        (Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.pre_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )) /\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )\n                      )} to the post-adjusted sale price range of ${formatCurrency(\n                        Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.post_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )\n                      )} or ${formatPercent(\n                        (Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.post_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )) /\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )\n                      )}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`}\n                    ></textarea>\n                    <button\n                      className=\"btn btn-primary mt-3\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(\n                            Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.pre_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                          )} or ${formatPercent(\n                            (Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.pre_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )) /\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                          )} to the post-adjusted sale price range of ${formatCurrency(\n                            Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.post_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                          )} or ${formatPercent(\n                            (Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.post_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )) /\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                          )}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`\n                        );\n                        alert(\"Text copied to clipboard!\");\n                      }}\n                    >\n                      Copy to Clipboard\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Scatter Plot Card */}\n              {scatterData() && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header bg-info text-white\">\n                    <h2>Comparable Property Adjustments</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <Scatter data={scatterData()} options={scatterOptions} />\n                  </div>\n                </div>\n              )}\n\n              {/* Properties List Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Comparable Properties</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <table className=\"table table-bordered table-responsive\">\n                      <thead>\n                        <tr>\n                          <th>Property Type</th>\n                          <th>Address</th>\n                          <th>Pre-Adjustment Amount</th>\n                          <th>Post-Adjustment Amount</th>\n                          <th>Comparable Type</th>\n                          <th>Total Adjustment Percent</th>\n                          <th>Sale Date</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {comparables.map((comp, index) => (\n                          <tr key={index}>\n                            <td>{comp.property_type}</td>\n                            <td>{comp.address}</td>\n                            <td>{formatCurrency(comp.pre_adj)}</td>\n                            <td>{formatCurrency(comp.post_adj)}</td>\n                            <td>{comp.comp_type}</td>\n                            <td>\n                              {formatPercent(comp.total_adj_percent, false)}\n                            </td>{\" \"}\n                            {/* Do not multiply by 100 */}\n                            <td>{comp.sale_date}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}