{"ast":null,"code":"var _jsxFileName = \"/Users/hamiltonmarty/sensitivity_app copy/sensitivity_application/frontend/src/components/SensitivityCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n// Import LineElement\nTooltip, Legend } from \"chart.js\";\nimport { Scatter } from \"react-chartjs-2\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\nconst SensitivityCalculator = ({\n  userEmail,\n  initialFile\n}) => {\n  _s();\n  const [file, setFile] = useState(initialFile || null);\n  const [subjectProperty, setSubjectProperty] = useState(null);\n  const [comparables, setComparables] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Debug logging\n  useEffect(() => {\n    console.log('SensitivityCalculator - Received Email:', userEmail);\n    console.log('SensitivityCalculator - Received Initial File:', initialFile);\n  }, [userEmail, initialFile]);\n\n  // Process uploaded file when initialFile changes\n  useEffect(() => {\n    const processUploadedFile = async () => {\n      if (!initialFile) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const formData = new FormData();\n        formData.append('file', initialFile);\n        const response = await axios.post('/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data) {\n          setSubjectProperty(response.data.subjectProperty);\n          setComparables(response.data.comparables);\n        } else {\n          setError('No data received from the server');\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('File processing error:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to process the uploaded file. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    processUploadedFile();\n  }, [initialFile]);\n  const scatterData = () => {\n    if (!comparables.length) return null;\n\n    // Filter out listing properties\n    const salesOnly = comparables.filter(comp => comp.comp_type === \"Sale\");\n\n    // Function to create a custom rotated triangle canvas\n    const createRotatedTriangle = rotation => {\n      const size = 10; // Size of the triangle\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = size * 2;\n      canvas.height = size * 2;\n      ctx.translate(size, size); // Move to the center of the canvas\n      ctx.rotate(rotation); // Rotate the triangle\n      ctx.beginPath();\n      ctx.moveTo(0, -size); // Top point\n      ctx.lineTo(size, size); // Bottom-right point\n      ctx.lineTo(-size, size); // Bottom-left point\n      ctx.closePath();\n      ctx.fillStyle = \"blue\"; // Set the fill color\n      ctx.fill();\n      return canvas;\n    };\n\n    // Predefine upward and downward triangles\n    const upwardTriangle = createRotatedTriangle(0); // No rotation\n    const downwardTriangle = createRotatedTriangle(Math.PI); // 180-degree rotation\n\n    const preAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.pre_adj,\n      address: comp.address,\n      postAdj: comp.post_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: comp.post_adj > comp.pre_adj ? upwardTriangle : downwardTriangle // Use predefined triangles\n    }));\n    const postAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.post_adj,\n      address: comp.address,\n      preAdj: comp.pre_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: \"circle\" // Post-adjustment points are always circles\n    }));\n    const subjectLine = Array.from({\n      length: salesOnly.length + 1\n    }, (_, i) => ({\n      x: i,\n      y: (subjectProperty === null || subjectProperty === void 0 ? void 0 : subjectProperty.pre_adj) || 0\n    }));\n    return {\n      datasets: [{\n        label: \"Pre-Adjustment Sale Price\",\n        data: preAdjPoints,\n        backgroundColor: \"blue\",\n        pointStyle: preAdjPoints.map(point => point.pointStyle),\n        // Apply triangle orientation\n        radius: 10 // Increase the size of the triangles\n      }, {\n        label: \"Post-Adjustment Sale Price\",\n        data: postAdjPoints,\n        backgroundColor: \"green\",\n        pointStyle: \"circle\",\n        // Post-adjustment points are always circles\n        radius: 10 // Increase the size of the circles\n      }, {\n        label: `Subject Sale Price: ${formatCurrency((subjectProperty === null || subjectProperty === void 0 ? void 0 : subjectProperty.pre_adj) || 0)}`,\n        data: subjectLine,\n        borderColor: \"red\",\n        borderWidth: 2,\n        pointRadius: 0,\n        // Hide points for the line\n        type: \"line\" // Render as a line\n      }]\n    };\n  };\n  const formatCurrency = value => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\"\n    }).format(value);\n  };\n  const formatPercent = (value, multiplyBy100 = true) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    const percentValue = multiplyBy100 ? parseFloat(value) * 100 : parseFloat(value);\n    return `${percentValue.toFixed(2)}%`; // Format to 2 decimal points\n  };\n  const scatterOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const datasetLabel = context.dataset.label;\n            const dataPoint = context.raw || {};\n\n            // Check if the dataset is the Subject Sale Price line\n            if (datasetLabel === \"Subject Sale Price\") {\n              return `Subject Property Sold Price: ${formatCurrency(dataPoint.y)}`;\n            }\n            return [`Address: ${dataPoint.address || \"N/A\"}`, `Pre-Adjustment Sale Price: ${formatCurrency(dataPoint.preAdj || dataPoint.y || 0)}`, `Post-Adjustment Sale Price: ${formatCurrency(dataPoint.postAdj || dataPoint.y || 0)}`, `Percent Change: ${formatPercent(dataPoint.percentChange || 0)}`];\n          }\n        }\n      },\n      afterDatasetsDraw: chart => {\n        const {\n          ctx,\n          data\n        } = chart;\n\n        // Draw lines between pre- and post-adjustment points\n        const preDataset = data.datasets[0].data; // Pre-Adjustment\n        const postDataset = data.datasets[1].data; // Post-Adjustment\n\n        ctx.save();\n        ctx.strokeStyle = \"gray\";\n        ctx.lineWidth = 1;\n        preDataset.forEach((prePoint, index) => {\n          const postPoint = postDataset[index];\n          if (prePoint && postPoint) {\n            const x1 = chart.scales.x.getPixelForValue(prePoint.x);\n            const y1 = chart.scales.y.getPixelForValue(prePoint.y);\n            const x2 = chart.scales.x.getPixelForValue(postPoint.x);\n            const y2 = chart.scales.y.getPixelForValue(postPoint.y);\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n          }\n        });\n        ctx.restore();\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Comparable Sales\"\n        },\n        ticks: {\n          stepSize: 1,\n          // Set step size to 1\n          min: 1 // Start the x-axis at 1 to hide step \"0\"\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Sale Price\"\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 10,\n        // Increase the size of the dots\n        hoverRadius: 10\n      }\n    }\n  };\n  const calculateSummaryCounts = () => {\n    const includedProperties = comparables.filter(comp => comp.comp_type !== \"Excluded\");\n    const excludedProperties = comparables.filter(comp => comp.comp_type === \"Excluded\");\n    return {\n      includedCount: includedProperties.length,\n      excludedCount: excludedProperties.length\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your file...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : !subjectProperty || comparables.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      children: \"No data available. Please ensure you've uploaded a valid XML file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-center\",\n        children: \"Adjustment Sensitivity Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Summary Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-responsive\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Pre-Adjustment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Post-Adjustment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Maximum Sale Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Minimum Sale Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Range of Sale Prices\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Percent Change\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Included Properties\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      children: comparables.filter(c => c.comp_type === \"Sale\").length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Excluded Properties (Listings)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"2\",\n                      children: comparables.filter(c => c.comp_type !== \"Sale\").length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Analysis Explanation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                rows: \"5\",\n                readOnly: true,\n                value: `A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} to the post-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary mt-3\",\n                onClick: () => {\n                  navigator.clipboard.writeText(`A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.pre_adj)))} to the post-adjusted sale price range of ${formatCurrency(Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))} or ${formatPercent((Math.max(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)) - Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj))) / Math.min(...comparables.filter(c => c.comp_type === \"Sale\").map(c => c.post_adj)))}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`);\n                  alert(\"Text copied to clipboard!\");\n                },\n                children: \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), scatterData() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-info text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Comparable Property Adjustments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(Scatter, {\n                data: scatterData(),\n                options: scatterOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 17\n          }, this), comparables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-4 border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header text-white bg-info\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Comparable Properties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-responsive\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Property Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Pre-Adjustment Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Post-Adjustment Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Comparable Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 605,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Total Adjustment Percent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Sale Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: comparables.map((comp, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.property_type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(comp.pre_adj)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatCurrency(comp.post_adj)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.comp_type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatPercent(comp.total_adj_percent, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: comp.sale_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(SensitivityCalculator, \"kZOOjLYCsN3gh+jtVKa/hc9TqD4=\");\n_c = SensitivityCalculator;\nexport default SensitivityCalculator;\nvar _c;\n$RefreshReg$(_c, \"SensitivityCalculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","Scatter","jsxDEV","_jsxDEV","register","SensitivityCalculator","userEmail","initialFile","_s","file","setFile","subjectProperty","setSubjectProperty","comparables","setComparables","error","setError","loading","setLoading","console","log","processUploadedFile","formData","FormData","append","response","post","headers","data","err","_err$response","_err$response$data","message","scatterData","length","salesOnly","filter","comp","comp_type","createRotatedTriangle","rotation","size","canvas","document","createElement","ctx","getContext","width","height","translate","rotate","beginPath","moveTo","lineTo","closePath","fillStyle","fill","upwardTriangle","downwardTriangle","Math","PI","preAdjPoints","map","index","x","y","pre_adj","address","postAdj","post_adj","percentChange","pointStyle","postAdjPoints","preAdj","subjectLine","Array","from","_","i","datasets","label","backgroundColor","point","radius","formatCurrency","borderColor","borderWidth","pointRadius","type","value","Intl","NumberFormat","style","currency","format","formatPercent","multiplyBy100","percentValue","parseFloat","toFixed","scatterOptions","plugins","tooltip","callbacks","context","datasetLabel","dataset","dataPoint","raw","afterDatasetsDraw","chart","preDataset","postDataset","save","strokeStyle","lineWidth","forEach","prePoint","postPoint","x1","scales","getPixelForValue","y1","x2","y2","stroke","restore","title","display","text","ticks","stepSize","min","elements","hoverRadius","calculateSummaryCounts","includedProperties","excludedProperties","includedCount","excludedCount","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","max","c","colSpan","rows","readOnly","onClick","navigator","clipboard","writeText","alert","options","property_type","total_adj_percent","sale_date","_c","$RefreshReg$"],"sources":["/Users/hamiltonmarty/sensitivity_app copy/sensitivity_application/frontend/src/components/SensitivityCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement, // Import LineElement\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Scatter } from \"react-chartjs-2\";\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend\n);\n\nconst SensitivityCalculator = ({ userEmail, initialFile }) => {\n  const [file, setFile] = useState(initialFile || null);\n  const [subjectProperty, setSubjectProperty] = useState(null);\n  const [comparables, setComparables] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Debug logging\n  useEffect(() => {\n    console.log('SensitivityCalculator - Received Email:', userEmail);\n    console.log('SensitivityCalculator - Received Initial File:', initialFile);\n  }, [userEmail, initialFile]);\n\n  // Process uploaded file when initialFile changes\n  useEffect(() => {\n    const processUploadedFile = async () => {\n      if (!initialFile) return;\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const formData = new FormData();\n        formData.append('file', initialFile);\n\n        const response = await axios.post('/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        if (response.data) {\n          setSubjectProperty(response.data.subjectProperty);\n          setComparables(response.data.comparables);\n        } else {\n          setError('No data received from the server');\n        }\n      } catch (err) {\n        console.error('File processing error:', err);\n        setError(err.response?.data?.message || 'Failed to process the uploaded file. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    processUploadedFile();\n  }, [initialFile]);\n\n  const scatterData = () => {\n    if (!comparables.length) return null;\n\n    // Filter out listing properties\n    const salesOnly = comparables.filter((comp) => comp.comp_type === \"Sale\");\n\n    // Function to create a custom rotated triangle canvas\n    const createRotatedTriangle = (rotation) => {\n      const size = 10; // Size of the triangle\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = size * 2;\n      canvas.height = size * 2;\n      ctx.translate(size, size); // Move to the center of the canvas\n      ctx.rotate(rotation); // Rotate the triangle\n      ctx.beginPath();\n      ctx.moveTo(0, -size); // Top point\n      ctx.lineTo(size, size); // Bottom-right point\n      ctx.lineTo(-size, size); // Bottom-left point\n      ctx.closePath();\n      ctx.fillStyle = \"blue\"; // Set the fill color\n      ctx.fill();\n      return canvas;\n    };\n\n    // Predefine upward and downward triangles\n    const upwardTriangle = createRotatedTriangle(0); // No rotation\n    const downwardTriangle = createRotatedTriangle(Math.PI); // 180-degree rotation\n\n    const preAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.pre_adj,\n      address: comp.address,\n      postAdj: comp.post_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle:\n        comp.post_adj > comp.pre_adj ? upwardTriangle : downwardTriangle, // Use predefined triangles\n    }));\n\n    const postAdjPoints = salesOnly.map((comp, index) => ({\n      x: index + 1,\n      y: comp.post_adj,\n      address: comp.address,\n      preAdj: comp.pre_adj,\n      percentChange: (comp.post_adj - comp.pre_adj) / comp.pre_adj,\n      pointStyle: \"circle\", // Post-adjustment points are always circles\n    }));\n\n    const subjectLine = Array.from(\n      { length: salesOnly.length + 1 },\n      (_, i) => ({\n        x: i,\n        y: subjectProperty?.pre_adj || 0,\n      })\n    );\n\n    return {\n      datasets: [\n        {\n          label: \"Pre-Adjustment Sale Price\",\n          data: preAdjPoints,\n          backgroundColor: \"blue\",\n          pointStyle: preAdjPoints.map((point) => point.pointStyle), // Apply triangle orientation\n          radius: 10, // Increase the size of the triangles\n        },\n        {\n          label: \"Post-Adjustment Sale Price\",\n          data: postAdjPoints,\n          backgroundColor: \"green\",\n          pointStyle: \"circle\", // Post-adjustment points are always circles\n          radius: 10, // Increase the size of the circles\n        },\n        {\n          label: `Subject Sale Price: ${formatCurrency(\n            subjectProperty?.pre_adj || 0\n          )}`,\n          data: subjectLine,\n          borderColor: \"red\",\n          borderWidth: 2,\n          pointRadius: 0, // Hide points for the line\n          type: \"line\", // Render as a line\n        },\n      ],\n    };\n  };\n\n  const formatCurrency = (value) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(value);\n  };\n\n  const formatPercent = (value, multiplyBy100 = true) => {\n    if (value === \"N/A\") return value; // Handle \"N/A\" values\n    const percentValue = multiplyBy100\n      ? parseFloat(value) * 100\n      : parseFloat(value);\n    return `${percentValue.toFixed(2)}%`; // Format to 2 decimal points\n  };\n\n  const scatterOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const datasetLabel = context.dataset.label;\n            const dataPoint = context.raw || {};\n\n            // Check if the dataset is the Subject Sale Price line\n            if (datasetLabel === \"Subject Sale Price\") {\n              return `Subject Property Sold Price: ${formatCurrency(\n                dataPoint.y\n              )}`;\n            }\n\n            return [\n              `Address: ${dataPoint.address || \"N/A\"}`,\n              `Pre-Adjustment Sale Price: ${formatCurrency(\n                dataPoint.preAdj || dataPoint.y || 0\n              )}`,\n              `Post-Adjustment Sale Price: ${formatCurrency(\n                dataPoint.postAdj || dataPoint.y || 0\n              )}`,\n              `Percent Change: ${formatPercent(dataPoint.percentChange || 0)}`,\n            ];\n          },\n        },\n      },\n      afterDatasetsDraw: (chart) => {\n        const { ctx, data } = chart;\n\n        // Draw lines between pre- and post-adjustment points\n        const preDataset = data.datasets[0].data; // Pre-Adjustment\n        const postDataset = data.datasets[1].data; // Post-Adjustment\n\n        ctx.save();\n        ctx.strokeStyle = \"gray\";\n        ctx.lineWidth = 1;\n\n        preDataset.forEach((prePoint, index) => {\n          const postPoint = postDataset[index];\n          if (prePoint && postPoint) {\n            const x1 = chart.scales.x.getPixelForValue(prePoint.x);\n            const y1 = chart.scales.y.getPixelForValue(prePoint.y);\n            const x2 = chart.scales.x.getPixelForValue(postPoint.x);\n            const y2 = chart.scales.y.getPixelForValue(postPoint.y);\n\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n          }\n        });\n\n        ctx.restore();\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Comparable Sales\",\n        },\n        ticks: {\n          stepSize: 1, // Set step size to 1\n          min: 1, // Start the x-axis at 1 to hide step \"0\"\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Sale Price\",\n        },\n      },\n    },\n    elements: {\n      point: {\n        radius: 10, // Increase the size of the dots\n        hoverRadius: 10,\n      },\n    },\n  };\n\n  const calculateSummaryCounts = () => {\n    const includedProperties = comparables.filter(\n      (comp) => comp.comp_type !== \"Excluded\"\n    );\n    const excludedProperties = comparables.filter(\n      (comp) => comp.comp_type === \"Excluded\"\n    );\n\n    return {\n      includedCount: includedProperties.length,\n      excludedCount: excludedProperties.length,\n    };\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      {loading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <p>Processing your file...</p>\n        </div>\n      ) : error ? (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      ) : !subjectProperty || comparables.length === 0 ? (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          No data available. Please ensure you've uploaded a valid XML file.\n        </div>\n      ) : (\n        <div className=\"container-fluid mt-5\">\n          <h1 className=\"mb-4 text-center\">Adjustment Sensitivity Analysis</h1>\n          <div className=\"row\">\n            {/* Right Column: Results and Charts */}\n            <div className=\"col-md-8\">\n              {/* Results Summary Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Summary Results</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <table className=\"table table-bordered table-responsive\">\n                      <thead>\n                        <tr>\n                          <th></th>\n                          <th>Pre-Adjustment</th>\n                          <th>Post-Adjustment</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>Maximum Sale Price</td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Minimum Sale Price</td>\n                          <td>\n                            {formatCurrency(\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Range of Sale Prices</td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )\n                            )}\n                          </td>\n                          <td>\n                            {formatCurrency(\n                              Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Percent Change</td>\n                          <td>\n                            {formatPercent(\n                              (Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )) /\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.pre_adj)\n                                )\n                            )}\n                          </td>\n                          <td>\n                            {formatPercent(\n                              (Math.max(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              ) -\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )) /\n                                Math.min(\n                                  ...comparables\n                                    .filter((c) => c.comp_type === \"Sale\")\n                                    .map((c) => c.post_adj)\n                                )\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Included Properties</td>\n                          <td colSpan=\"2\">\n                            {comparables.filter((c) => c.comp_type === \"Sale\").length}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Excluded Properties (Listings)</td>\n                          <td colSpan=\"2\">\n                            {comparables.filter((c) => c.comp_type !== \"Sale\").length}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n\n              {/* Analysis Explanation Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Analysis Explanation</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"5\"\n                      readOnly\n                      value={`A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(\n                        Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.pre_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )\n                      )} or ${formatPercent(\n                        (Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.pre_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )) /\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.pre_adj)\n                          )\n                      )} to the post-adjusted sale price range of ${formatCurrency(\n                        Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.post_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )\n                      )} or ${formatPercent(\n                        (Math.max(\n                          ...comparables\n                            .filter((c) => c.comp_type === \"Sale\")\n                            .map((c) => c.post_adj)\n                        ) -\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )) /\n                          Math.min(\n                            ...comparables\n                              .filter((c) => c.comp_type === \"Sale\")\n                              .map((c) => c.post_adj)\n                          )\n                      )}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`}\n                    ></textarea>\n                    <button\n                      className=\"btn btn-primary mt-3\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `A good indication that the individual adjustments represent the market reaction can be seen in the difference between the pre-adjusted sale price range of ${formatCurrency(\n                            Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.pre_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                          )} or ${formatPercent(\n                            (Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.pre_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )) /\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.pre_adj)\n                              )\n                          )} to the post-adjusted sale price range of ${formatCurrency(\n                            Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.post_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                          )} or ${formatPercent(\n                            (Math.max(\n                              ...comparables\n                                .filter((c) => c.comp_type === \"Sale\")\n                                .map((c) => c.post_adj)\n                            ) -\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )) /\n                              Math.min(\n                                ...comparables\n                                  .filter((c) => c.comp_type === \"Sale\")\n                                  .map((c) => c.post_adj)\n                              )\n                          )}. The tighter the adjusted range suggests that the adjustments are more credible and reflective of the market.`\n                        );\n                        alert(\"Text copied to clipboard!\");\n                      }}\n                    >\n                      Copy to Clipboard\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Scatter Plot Card */}\n              {scatterData() && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header bg-info text-white\">\n                    <h2>Comparable Property Adjustments</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <Scatter data={scatterData()} options={scatterOptions} />\n                  </div>\n                </div>\n              )}\n\n              {/* Properties List Card */}\n              {comparables.length > 0 && (\n                <div className=\"card mb-4 border-info\">\n                  <div className=\"card-header text-white bg-info\">\n                    <h2>Comparable Properties</h2>\n                  </div>\n                  <div className=\"card-body\">\n                    <table className=\"table table-bordered table-responsive\">\n                      <thead>\n                        <tr>\n                          <th>Property Type</th>\n                          <th>Address</th>\n                          <th>Pre-Adjustment Amount</th>\n                          <th>Post-Adjustment Amount</th>\n                          <th>Comparable Type</th>\n                          <th>Total Adjustment Percent</th>\n                          <th>Sale Date</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {comparables.map((comp, index) => (\n                          <tr key={index}>\n                            <td>{comp.property_type}</td>\n                            <td>{comp.address}</td>\n                            <td>{formatCurrency(comp.pre_adj)}</td>\n                            <td>{formatCurrency(comp.post_adj)}</td>\n                            <td>{comp.comp_type}</td>\n                            <td>\n                              {formatPercent(comp.total_adj_percent, false)}\n                            </td>\n                            <td>{comp.sale_date}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}